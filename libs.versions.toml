[versions]
agp = "7.1.1"
appCompat = "1.4.2"
androidCore = "1.8.0"
kotlin = "1.6.10"
coroutine = "1.6.0"
constraint = "2.1.4"
fragment = "1.4.1"
navigation = "2.4.2"
recyclerview = "1.2.1"
lifecycle = "2.4.1"
room = "2.4.2"
material = "1.6.1"

okhttp = "4.9.3"
retrofit = "2.9.0"
gson = "2.9.0"
dagger = "2.40.5"

kotest = "5.1.0"
archTest = "2.1.0"
mockitoAll = "1.10.19"
mockitoCore = "4.6.1"
mockitoKotlin = "4.0.0"
mockitoAndroid = "4.4.0"
assertJ = "1.7.1"
junit = "4.13.2"
junitPlatform = "1.7.2"
expresso = "3.4.0"
androidJunit = "1.1.3"

[libraries]
androidCore = { module = "androidx.core:core-ktx", version.ref = "androidCore" }
appCompat = { module = "androidx.appcompat:appcompat", version.ref = "appCompat" }
recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "recyclerview" }
constraintLayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraint" }
fragmentKtx = { module = "androidx.fragment:fragment-ktx", version.ref = "fragment" }
navFragmentKtx = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navigation" }
navUiKtx = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navigation" }
material = { module = "com.google.android.material:material", version.ref = "material" }

lifecycle_common = { module = "androidx.lifecycle:lifecycle-common", version.ref = "lifecycle" }
lifecycle_runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
lifecycle_process = { module = "androidx.lifecycle:lifecycle-process", version.ref = "lifecycle" }
livedata = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle" }
viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
viewmodelSavedstate = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "lifecycle" }
lifecycleCompiler = { module = "androidx.lifecycle:lifecycle-compiler", version.ref = "lifecycle" }

room = { module = "androidx.room:room-runtime", version.ref = "room" }
room_ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
roomCompiler = { module = "androidx.room:room-compiler", version.ref = "room" }
roomTesting = { module = "androidx.room:room-testing", version.ref = "room" }

kotlin_core = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
coroutineCore = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutine" }
coroutineAndroid = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutine" }

okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
mockWebServer = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okhttp" }

retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofitMock = { module = "com.squareup.retrofit2:retrofit-mock", version.ref = "retrofit" }

gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
gsonConverter = { module = "com.squareup.retrofit2:converter-gson", version.ref = "gson" }

dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
daggerAndroid = { module = "com.google.dagger:dagger-android", version.ref = "dagger" }
daggerLint = { module = "com.google.dagger:dagger-lint", version.ref = "dagger" }
daggerCompiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }

kotlinjunit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
archCore = { module = "androidx.arch.core:core-testing", version.ref = "archTest" }
kotestCore = { module = "io.kotest:kotest-runner-junit5-jvm", version.ref = "kotest" }
kotestJUnit = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotestProperty = { module = "io.kotest:kotest-property", version.ref = "kotest" }

coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutine" }
mockitoAll = { module = "org.mockito:mockito-all", version.ref = "mockitoAll" }
mockitoCore = { module = "org.mockito:mockito-core", version.ref = "mockitoCore" }
mockitoKotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockitoKotlin" }

unittest = { module = "junit:junit", version.ref = "junit" }
assertJ = { module = "org.assertj:assertj-core", version.ref = "assertJ" }
junitPlatform = { module = "org.junit.platform:junit-platform-runner", version.ref = "junitPlatform" }


androidJunit = { module = 'androidx.test.ext:junit', version.ref = "androidJunit" }
expresso = { module = 'androidx.test.espresso:espresso-core', version.ref = "expresso" }
mockitoAndroid = { module = "org.mockito:mockito-android", version.ref = "mockitoAndroid" }

[plugins]
android-app = { id = "com.android.app", version.ref = "agp" }
android-lib = { id = "com.android.library", version.ref = "agp" }